/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bsu.makeicon;

import java.awt.Image;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetAdapter;
import java.awt.dnd.DropTargetDropEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author ugame
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        
        //设置拖放窗口
        new DropTarget(p_drag, DnDConstants.ACTION_COPY ,  new ImageDropTargetListener());  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p_drag = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        bt_openIcon = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        p_drag.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        p_drag.setPreferredSize(new java.awt.Dimension(144, 144));
        p_drag.setSize(new java.awt.Dimension(144, 144));

        jLabel7.setForeground(new java.awt.Color(128, 128, 128));
        jLabel7.setText("拖入图标(512*512)");

        javax.swing.GroupLayout p_dragLayout = new javax.swing.GroupLayout(p_drag);
        p_drag.setLayout(p_dragLayout);
        p_dragLayout.setHorizontalGroup(
            p_dragLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_dragLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel7)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        p_dragLayout.setVerticalGroup(
            p_dragLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p_dragLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(59, 59, 59))
        );

        bt_openIcon.setText("打开图标(512*512)");
        bt_openIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_openIconActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_drag, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bt_openIcon))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(p_drag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_openIcon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_openIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_openIconActionPerformed
        JFileChooser jc_icon = new JFileChooser();
        jc_icon.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        jc_icon.setFileFilter(new FileFilter(){

            @Override
            public boolean accept(File f) {
                String tmp = f.getName().toLowerCase();
                if(tmp.endsWith(".png") || f.isDirectory())
                    return true;
                return false;
            }

            @Override
            public String getDescription() {
                return "png文件";
            }
        });
        
        int index = jc_icon.showDialog(null, "选择图标");
        if(index==JFileChooser.APPROVE_OPTION){
            try {
                makeImage(jc_icon.getSelectedFile().getPath());
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bt_openIconActionPerformed
    /**
     * 通过导入的图标生成所有尺寸的图标
     * @param path 源图标的路径
     */
    private void makeImage(String path) throws IOException{
        File png = new File(path);
        int[] size = ImageHelper.getPNGSize(png);
        if(size[0]!=512 || size[1]!=512){
            JOptionPane.showMessageDialog(MainFrame.this, "您选择的图标尺寸不合适，请选择512*512尺寸的图标");
            return;
        }
        //生成路径
        String makepath = png.getParent()+"/makeIcon/";
        File pngpath = new File(makepath);
        boolean b = pngpath.mkdir();
        System.out.println("==========="+b);
        int[] pngsize = {28,32,48,57,72,76,96,100,108,114,120,144,152,175};
        
        //生成不同尺寸图标
        for(int i=0;i<pngsize.length;i++){
            StringBuilder sb = new StringBuilder();
            sb.append(makepath)
                    .append(Integer.toString(pngsize[i]))
                    .append(".png");
            ImageHelper.resizePNG(png, sb.toString(), pngsize[i], pngsize[i], false);
        }
    }
    
    class ImageDropTargetListener extends DropTargetAdapter  
    {  
        public void drop(DropTargetDropEvent event)  
        {  
            //接受复制操作  
            event.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);  
            //获取拖放的内容  
            Transferable transferable = event.getTransferable();  
            DataFlavor[] flavors = transferable.getTransferDataFlavors();  
            //遍历拖放内容里的所有数据格式  
            for (int i = 0; i < flavors.length; i++)  
            {    
                DataFlavor d = flavors[i];  
                try  
                {  
                    //如果拖放内容的数据格式是文件列表  
                    if (d.equals(DataFlavor.javaFileListFlavor))  
                    {  
                        //取出拖放操作里的文件列表  
                        java.util.List fileList   
                            = (java.util.List) transferable.getTransferData(d);  
                        for (Object f : fileList)  
                        {  
                            //显示每个文件  
//                            showImage((File)f , event);  
                            makeImage(((File)f).getPath());
                        }  
                    }  
                }  
                catch (Exception e)  
                {    
                    e.printStackTrace();  
                }  
                //强制拖放操作结束，停止阻塞拖放源  
                event.dropComplete(true);  
            }  
        }  
        
        //显示每个文件的工具方法  
        private void showImage(File f , DropTargetDropEvent event)throws java.io.IOException  
        {  
//            Image image = ImageIO.read(f);  
//            if (image == null)  
//            {  
//                //强制拖放操作结束，停止阻塞拖放源  
//                event.dropComplete(true);  
//                JOptionPane.showInternalMessageDialog(desktop , "系统不支持这种类型的文件");  
//                //方法返回，不会继续操作  
//                return;  
//            }  
//            ImageIcon icon = new ImageIcon(image);  
//            //创建内部窗口显示该图片  
//            JInternalFrame iframe = new JInternalFrame(f.getName()  
//                ,true , true , true , true);  
//            JLabel imageLabel = new JLabel(icon);  
//            iframe.add(new JScrollPane(imageLabel));  
//            desktop.add(iframe);  
//            //设置内部窗口的原始位置（内部窗口默认大小是0X0，放在0,0位置）  
//            iframe.reshape(nextFrameX, nextFrameY, width, height);  
//            //使该窗口可见，并尝试选中它  
//            iframe.show();  
//            //计算下一个内部窗口的位置  
//            nextFrameX += FRAME_DISTANCE;  
//            nextFrameY += FRAME_DISTANCE;  
//            if (nextFrameX + width > desktop.getWidth()) nextFrameX = 0;  
//            if (nextFrameY + height > desktop.getHeight()) nextFrameY = 0;  
        }  
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_openIcon;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel p_drag;
    // End of variables declaration//GEN-END:variables
}
